
public class test4 {

}

// 서술형 30문항 답지

/*

1. Class 정의와 작성법에 대해서 서술하시오.
Class란 객체의 속성과 기능을 정의한 문서(설계도).

* 작성법
[접근제한자] [예약어] class 클래스명 { }
- 접근제한자 : public, (default)
- 예약어 : abstract , final

2. 접근제한자의 종류와 제한 범위를 서술하세요.
public : 전체(같은 프로젝트)
protected : 같은 패키지 + 상속 관계 후손 클래스
(default) : 같은 패키지
private : 해당 클래스 내부

3. static이란 무엇인지 서술하세요.
정적 메모리(공유 메모리) 영역이라고 하며 필드 또는 메서드에 작성되면 프로그램 실행 시 static 메모리 영역에 클래스명.필드명 형식으로 할당됨.
같은 타입의 여러 객체가 공유하거나 프로그램 전체적으로 공유할 때 사용.

4. final 예약어의 필드, 메서드, 클래스별 의미를 서술하세요.
- 필드 : 상수
- 메서드 : 오버라이딩 불가
- 클래스 : 상속 불가

5.생성자의 정의와 작성 방법을 서술하세요.
- 정의
객체 생성 시 사용되는 메서드로
new 연산자에 의해서 객체가 Heap 메모리 영역에 생성될 때 필드를 초기화하고, 생성 시 필요한 기능을 수행할때 사용.

- 작성 방법
반환형(반환값)이 없으며 이름은 클래스명과 동일하게 작성

6.컴파일러가 컴파일 시 자동으로 추가해주는 구문을 3가지 이상 작성하세요.
- 기본 생성자
- toString()
- this
- super()
- import java.lang.*;
- 자동 형변환
- return

7. this 참조 변수, this 생성자에 대해서 서술하세요.
- this 참조 변수
생성되는 모든 인스턴스(객체) 내부에 숨겨져 있는 참조 변수로, 생성된 현재 객체의 시작 주소를 참조함.
- this() 생성자
같은 클래스 내 다른 생성자를 호출할 때 사용.
코드 중복을 없애는 것을 목적으로 함.
반드시 생성자 첫 번째 줄에 작성해야함.

8. return 예약어의 의미를 서술하세요.
해당 메서드를 종료하고 호출한 메서드로 돌아가는 예약어.
return 시 반환 값이 있다면 값 을 가지고 돌아감.

9. 객체 배열이란 무엇인지 서술하세요.
같은 객체 참조 변수를 묶음으로 다룬 것

10. 객체 지향 언어의 특징 중 상속에의 정의를 서술하세요.
부모 클래스가 가지고 있는 멤버(필드, 메서드)를 새로 작성하는 자식 클래스에 직접 작성하지 않고 물려 받음으로써 자식 클래스가 부모의 멤버를 자신의 것 처럼 사용하는 기능.

11. 상속의 장점 3가지를 서술하세요.
1. 클래스 재사용(부모 클래스를 재사용함)
2. 코드 길이 감소(공통 코드를 부모 클래스에만 작성)
3. 유지보수성 증가(부모 클래스 수정 시 자식 클래스도 수정됨)

12. super 참조 변수, super() 생성자에 대해서 서술하세요.
- super 참조 변수
자식 객체 내부의 부모 객체를 참조하는 변수로
자식 클래스 작성 시 부모의 필드, 메서드를 호출할 때 사용

- super() 생성자
자식 클래스 생성자 첫 번째 줄에 작성되는 예약어로
자식 객체 내 부모 객체 부분 생성 시 사용

13. 오버로딩, 오버라이딩의 차이점을 서술하세요.
- 오버로딩
1. 같은 클래스 내에서 하나의 메서드명으로 작성됨.
2. 매개변수의 순서, 타입, 개수 중 하나라도 달라야함.
3. 반환형 관계 없음.
4. 접근 제한자 관계 없음.
5. 예외처리 관계 없음.

- 오버라이딩
1. 자식 클래스에서 부모로 부터 상속 받은 메서드를 재정의.
2. 부모 메서드와 매개변수가 모두 일치해야함.
3. 부모 메서드와 반환형이 동일해야함.
4. 부모 메서드의 접근제한자 보다 같거나 넓어야 함.
5. 부모 메서드의 예외보다 같거나 더 구체적(자식 예외)

14. 객체 지향언어의 특징 중 다형성의 정의를 서술하세요.
하나의 객체가 다양한 형태를 지니는 성질을 갖는다는 뜻.
상속을 기반으로 하는 기술로 부모 타입의 참조 변수 하나로 다양한 자식 객체를 참조할 수 있는 기술.

15. 다형성의 업 캐스팅, 다운 캐스팅에 대해서 서술하세요.
- Up Casting
부모 타입의 참조 변수로 자식 타입의 객체를 참조.
자식 객체를 참조 하지만 부모의 멤버만 참조 가능.

- Down Casting
Up Casting 상태의 부모 타입 참조 변수를 자식 타입으로 형변환 하는 것.
자식의 멤버를 모두 참조할 수 있게됨.

16. 정적 바인딩, 동적 바인딩에 대해서 서술하세요.
- 정적 바인딩
프로그램 실행 전 컴파일 단계에서 호출되는 메서드와 메서드 코드를 연결하는 것.
- 동적 바인딩
프로그램 실행 중 실행할 당시의 객체 타입으로 연결되는 것으로
업 캐스팅 상태인 경우 오버라이딩 된 자식의 메서드가 수행됨.

17. 추상 메서드에 대해서 서술하세요.
- 추상 메서드
몸체가 없는 메서드로 abstarct 키워드를 사용.
상속한 자식 클래스에 오버라이딩을 강제함.

18. 추상클래스와 인터페이스의 차이점을 서술하세요.
- 추상 클래스
1. 클래스간의 단일 상속만 가능
2. extends 키워드 사용
3. abstract 메서드 0개 이상
4. 메서드에 abstract 키워드를 명시적으로 작성
5. 일반 필드를 가질 수 있음.

- 인터페이스
1. 클래스 상속 시 다중 상속 가능
2. implements 키워드 사용
3. 모든 메서드가 abstract
4. 메서드에 abstract 키워드를 작성하지 않아도 묵시적으로 abstract
5. 모든 필드가 상수(public static final)

19. 예외, 예외 처리에 대해서 서술하세요.
예외(Exception) : 소스 코드로 수정 가능한 에러
예외 처리 : 예외 구문을 처리하는 방법

20. 에러의 정의와 종류를 서술하세요.
에러 : 프로그램 수행 중 비정상 종료가 발생하는 상황.
1. 컴파일 에러 : 소스 코드 문법 에러
2. 런타임 에러 : 프로그램 수행 중 발생하는 에러
3. 시스템 에러 : 컴퓨터 오작동으로 발생하는 에러

21. Checked Exception, Unchecked Exception에 대해서 서술하세요.
Checked Exception : 반드시 예외 처리 구문을 작성해야되는 예외
Unchecked Exception : 선택적으로 예외 처리 구문을 작성해도 되는 예외

22. 예외 처리 방법 2가지를 서술하세요.
- try ~ catch ~ finally
try 구문 내에서 발생되는 예외를 catch문에서 처리함.
catch구문이 수행 여부와 관계 없이 finally 구문 수행.
- throws
현재 메서드에서 발생한 예외를 호출한 메서드로 던지는 예외 처리 방법

23. 컬렉션의 종류 3가지와 특징을 서술하세요.
- List : 순서 유지 O(인덱스 존재), 중복 데이터 저장 O
- Set : 순서 유지 X(인덱스 없음), 중복 데이터 저장 X
- Map : K:V 쌍으로 존재, Key의 묶음은 Set, Value의 묶음은 List의 특징을 가짐

24. Stream이란 무엇인지 서술하세요.
컴퓨터 내부 또는 외부, 프로그램 간의 데이터를 입출력 하기 위해 공통적으로 사용되는 것(객체)으로 입력, 출력 스트림이 존재

25. 서버와 클라이언트에 대해서 서술하세요.
서버 : 서비스를 제공하는 컴퓨터 또는 프로그램
클라이언트 : 서비스를 요청하여 사용하는 컴퓨터 또는 프로그램.

26. IP와 Port에 대해서 서술하세요.
IP : 네트워크 상에서 컴퓨터를 식별하기 위한 고유 번호
Port : 같은 컴퓨터 내에서 프로그램을 식별하는 번호

27. Socket에 대해서 서술하세요.
프로세스 간의 통신에 사용되는 양쪽 끝단.
서버, 클라이언트가 데이터를 주고받을 수 있도록 스트림이 존재.

28. 프로토콜의 정의를 서술하세요.
컴퓨터 간의 정보를 주고 받을 때의 통신방법에 대한 규약으로
접속이나, 전달방식, 데이터의 형식, 검증 방법 등을 맞추기 위한 약속

29. TCP에 대해서 서술하세요.
데이터의 전달의 신뢰성을 최대한 보장하기 위한방식으로 연결지향형 통신이다.
순차적으로 데이터를 전송하고 확인 및 오류 시 재전송을 한다.

30. UDP에 대해서 서술하세요.
데이터의 빠른 전달을 보장하기위한 방식으로 비연결 지향형 통신이다.
확인 및 재전송 작업이 없다.


=== 문제해결 답안지 ===

문제점1 : 24번째 줄 if문의 조건식이 잘못 작성됨.
사유1 : String은 참조형으로 값을 비교하기 위해서는 == 비교 연산자가 아닌 equals()를 이용해야함.

문제점2 : 같은 이름을 찾게 되더라도 29번째 줄 if문이 수행됨.
사유2 : List에 일치하는 이름이 없을 때만 수행되어야 하는데
24번째 줄 일치 여부를 판단하는 if문에 flag 값을 변경하는 구문이 누락되어 "입력한 회원이 존재하지 않습니다"가 무조건 출력됨.
-------------------------------------
조치1 : 24번째 줄 if문의 조건식을
list.get(i).equals(input) 으로 변경.

조치2 : 25, 26번째 줄 사이에
flag = flase; 구문을 추가.
















*/